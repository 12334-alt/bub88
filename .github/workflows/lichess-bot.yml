name: 24/7 Lichess Bot - Maximum Power

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
    - cron: '0 */2 * * *'   # Every 2 hours (backup)
  push:
    branches: [ main ]

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 115
    
    concurrency:
      group: lichess-bot-runner
      cancel-in-progress: false

    env:
      TOKEN: ${{ secrets.LICHESS_TOKEN }}
      PYTHONUNBUFFERED: 1

    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔧 Configure Bot Token
        run: |
          sed -i "s/^token:.*/token: \"${TOKEN}\"/" config.yml

      - name: ⚡ Download Latest Stockfish (Strongest)
        run: |
          curl -L -o stockfish.zip "https://abrok.eu/stockfish/latest/linux/stockfish_x64_avx2.zip" || \
          curl -L -o stockfish.zip "https://abrok.eu/stockfish/latest/linux/stockfish_x64_modern.zip"
          unzip -o stockfish.zip -d engines/
          find engines/ -name "stockfish*" -type f -exec mv {} engines/stockfish \;
          chmod +x engines/stockfish

      - name: 🎯 Setup Additional Engines
        run: |
          # Stockfish 17+ for variants
          curl -L -o engines/stockfish17 "https://github.com/official-stockfish/Stockfish/releases/download/sf_17/stockfish-ubuntu-x86-64-avx2" || \
          curl -L -o engines/stockfish17 "https://github.com/official-stockfish/Stockfish/releases/download/sf_17/stockfish-ubuntu-x86-64-modern"
          chmod +x engines/stockfish17
          
          # Make fairy-stockfish executable if exists
          [ -f "engines/fairy-stockfish" ] && chmod +x engines/fairy-stockfish || true

      - name: 🤖 Run Elite Bot
        run: |
          echo "🚀 Starting bot at $(date)"
          timeout 110m python -u user_interface.py -u || echo "⏰ Session completed"

      - name: 🔄 Cleanup
        if: always()
        run: |
          rm -f stockfish*.zip 2>/dev/null || true
          echo "✅ Ready for next run"

  # Backup runner if main fails
  backup-runner:
    runs-on: ubuntu-latest
    needs: run-bot
    if: failure()
    timeout-minutes: 60

    env:
      TOKEN: ${{ secrets.LICHESS_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: 🔄 Backup Execution
        run: |
          pip install -r requirements.txt
          sed -i "s/^token:.*/token: \"${TOKEN}\"/" config.yml
          curl -L -o engines/stockfish "https://abrok.eu/stockfish/latest/linux/stockfish_x64_modern.zip" && \
          unzip -o engines/stockfish -d engines/ && chmod +x engines/stockfish* || true
          timeout 55m python -u user_interface.py -u || echo "Backup completed"
